{"version":3,"file":"static/js/317.0285ac0a.chunk.js","mappings":"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","sources":["components/errorMessage/errorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/searchForm/SearchForm.js","components/errorBoundary/ErrorBoundary.js","components/pages/FirstPage.js","hooks/http.hook.js","services/MarvelService.js"],"sourcesContent":["import img from './error.gif';\nconst ErrorMessage = () => {\n\treturn (\n\t\t<img \n\t\t\tsrc={img} \n\t\t\talt=\"error message\"\n\t\t\tstyle = {{display: \"block\", \n\t\t\t\t\twidth: \"250px\", \n\t\t\t\t\theigth: \"250px\", \n\t\t\t\t\tobjectFit: 'contain',\n\t\t\t\t\tmargin: '0 auto'\n\t\t\t\t}}\n\t\t/>\n\t)\n}\nexport default ErrorMessage;","import { useState, useEffect } from 'react';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar =() => {\n\tconst [char, setChar] = useState({});\n\tconst {loading, error, getCharacter, clearError} = useMarvelService();\n\n\tuseEffect(() => {\n\t\tupdateChar();\n\t\t// const timerId = setInterval(updateChar, 30000);\n\t\t// return () => {\n\t\t// \tclearInterval(timerId);\n\t\t// }\n\t}, []) \n\n\tconst onCharLoaded = (char) => {\n\t\tsetChar(() => char);\n\t}\n\n\tconst updateChar = () => {\n\t\tclearError();\n\t\t// const id = Math.floor(Math.random() * (1011400-1011000) + 1011000);\n\t\tconst id = Math.floor(Math.random() * (20-0) + 0);\n\t\tgetCharacter(id)\n\t\t\t.then(onCharLoaded)\n\t}\n\n\tconst errorMessage = error ? <ErrorMessage/> : null;\n\tconst spinner = loading ? <Spinner/> : null;\n\tconst content = !(loading || error) ? <View char = {char}/> :null;\n\n\treturn (\n\t\t<div className=\"randomchar\">\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{content}\n\t\t\t<div className=\"randomchar__static\">\n\t\t\t\t<p className=\"randomchar__title\">\n\t\t\t\t\tRandom character for today!<br/>\n\t\t\t\t\tDo you want to get to know him better?\n\t\t\t\t</p>\n\t\t\t\t<p className=\"randomchar__title\">\n\t\t\t\t\tOr choose another one\n\t\t\t\t</p>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"button button__main\"\n\t\t\t\t\tonClick={updateChar}>\n\t\t\t\t\t<div className=\"inner\">try it</div>\n\t\t\t\t</button>\n\t\t\t\t<img src={mjolnir} \n\t\t\t\t\talt=\"mjolnir\" \n\t\t\t\t\tclassName=\"randomchar__decoration\"/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst View = ({char}) => {\n\tconst {name, description, thumbnail, homepage, wiki} = char;\n\tlet className = \"randomchar__img\";\n\t// thumbnail.indexOf('image_not_available') > -1 ? className = \"randomchar__img no-img\" : className = \"randomchar__img\";\n\n\treturn (\n\t\t<div className=\"randomchar__block\">\n\t\t\t<img src={thumbnail} \n\t\t\t\talt={name}\n\t\t\t\t// style={imgStyle}\n\t\t\t\tclassName={className}/>\n\t\t\t<div className=\"randomchar__info\">\n\t\t\t\t<p className=\"randomchar__name\">{name}</p>\n\t\t\t\t<p className=\"randomchar__descr\">\n\t\t\t\t\t{description}\n\t\t\t\t</p>\n\t\t\t\t<div className=\"randomchar__btns\">\n\t\t\t\t\t<a href={homepage} className=\"button button__main\">\n\t\t\t\t\t\t<div className=\"inner\">homepage</div>\n\t\t\t\t\t</a>\n\t\t\t\t\t<a href={wiki} className=\"button button__secondary\">\n\t\t\t\t\t\t<div className=\"inner\">Wiki</div>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default RandomChar;","import { useState, useEffect, useRef } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './charList.scss';\n\nconst CharList = (props) => {\n\n\tconst [charList, setCharList] = useState([]);\n\tconst [newItemsLoading, setNewItemsLoading] = useState(false);\n\t// const [offset, setOffset] = useState(210);\n\tconst [offset, setOffset] = useState(0);\n\tconst [charEnded, setCharEnded] = useState(false);\n\tconst [pageEnded, setPageEnded] = useState(false);\n\n\tconst {loading, error, getAllCharacters} = useMarvelService();\n\n\n\tuseEffect(() => {\n\t\tpageScrollToTop();\n\t\tonRequest(offset, true);\n\t\tsetTimeout(() => {\n\t\t\twindow.addEventListener('scroll', onScroll);\n\t\t}, 150);\n\t}, [])\n\n\t// componentWillUnmount() {\n\t// \twindow.removeEventListener('scroll', this.onScroll);\n\t// }\n\n\t// componentDidUpdate(prevProps, prevState) {\n\t// \tif (this.state.pageEnded && (this.state.pageEnded !== prevState.pageEnded)) {\n\t// \t\tthis.onRequest(this.state.offset);\n\t// \t}\n\t// }\n\n\tuseEffect(() => {\n\t\tif (pageEnded) {\n\t\t\tonRequest(offset);\n\t\t}\n\t}, [pageEnded])\n\n    const pageScrollToTop =() => {\n\t\tsetTimeout(() => { \n\t\t\twindow.scroll({ top: -1, left: 0 });\n\t\t}, 100);\n\t}\n\n\tconst onRequest = (offset, initial) => {\n\t\tinitial ? setNewItemsLoading(false) : setNewItemsLoading(true);\n\t\tgetAllCharacters(offset)\n\t\t\t.then(onCharListLoaded)\n\t}\n\n\tconst onScroll = () => {\n\t\tconst height = document.documentElement.scrollHeight;\n\t\tconst clientHeight = document.documentElement.clientHeight;\n\t\tconst scroll =  window.scrollY;\n\t\tif (charEnded) {\n\t\t\twindow.removeEventListener('scroll', onScroll);\n\t\t}\n\t\tif (scroll + clientHeight >= height - 5) {\n\t\t\tsetPageEnded(true);\n\t\t}\n\t}\n\n\tconst onCharListLoaded = async (newCharList) => {\n\n\t\tlet ended = false;\n\t\tif(newCharList.length < 9) {\n\t\t\tended = true;\n\t\t}\n\t\tconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\t\tfor (let char of newCharList) {\n            await delay(1000);\n            setCharList(charList => [...charList, char]);\n        }\n\n\t\t// setCharList(charList => [...charList, ...newCharList ]);\n\t\tsetNewItemsLoading(false);\n\t\tsetOffset(offset => offset + 9);\n\t\tsetCharEnded(ended);\n\t\tsetPageEnded(false);\n\t}\n\n\t// console.log('render');\n\tconst itemRefs = useRef([]);\n\n\tconst focusOnItem = (id) => {\n\t\ttry {\n\t\t\titemRefs.current.forEach(item => {\n\t\t\t\titem.classList.remove('char__item_selected');\n\t\t\t})\n\t\t} catch {}\n\t\titemRefs.current[id].classList.add('char__item_selected')\n\t\titemRefs.current[id].focus();\n\t}\n\n\tfunction renderItems(arr) {\n\t\tconst items = arr.map((item, i) => {\n\t\t\tlet imgStyle = {'objectFit' : 'cover'};\n\t\t\tif (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n\t\t\t\timgStyle = {'objectFit' : 'unset'};\n\t\t\t} else if (item.thumbnail.indexOf('.gif') > -1) {\n\t\t\t\timgStyle = {'objectFit' : 'contain'};\n\t\t\t}\n\t\t\t\n\t\t\treturn (\n\t\t\t\t<CSSTransition key = {item.id} classNames='char__item' timeout={500}>\n\t\t\t\t\t<li className='char__item'\n\t\t\t\t\t\tref = {el => itemRefs.current[i] = el}\n\t\t\t\t\t\ttabIndex='0'\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tprops.onCharSelected(item.id);\n\t\t\t\t\t\t\tfocusOnItem(i);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonKeyDown={(e) => {\n\t\t\t\t\t\t\tif (e.key === ' ') {\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (e.key === \"Enter\" || e.key === ' ') {\n\t\t\t\t\t\t\t\tprops.onCharSelected(item.id);\n\t\t\t\t\t\t\t\tfocusOnItem(i);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<img src={item.thumbnail} \n\t\t\t\t\t\t\talt={item.name}\n\t\t\t\t\t\t\tstyle = {imgStyle}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"char__name\">{item.name}</div>\n\t\t\t\t\t</li>\n\t\t\t\t</CSSTransition>\n\t\t\t)\n\t\t});\n\n\t\treturn (\n\t\t\t<ul className=\"char__grid\">\n\t\t\t\t<TransitionGroup component={null}>\n\t\t\t\t\t{items}\n\t\t\t\t</TransitionGroup>\n\t\t\t</ul>\n\t\t)\n\t}\n\n\n\tconst items = renderItems(charList);\n\tconst errorMessage = error ? <ErrorMessage/> : null;\n\tconst spinner = loading && !newItemsLoading ? <Spinner/> : null;\n\t// const content = !(loading || error) ? items : null;\n\n\treturn (\n\t\t<div className=\"char__list\">\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{/* {content} */}\n\t\t\t{items}\n\t\t\t<button \n\t\t\t\tclassName=\"button button__main button__long\"\n\t\t\t\tdisabled={newItemsLoading}\n\t\t\t\tstyle={{'display': charEnded? \"none\" : \"block\"}}\n\t\t\t\tonClick={() => onRequest(offset)}>\n\t\t\t\t<div className=\"inner\">load more</div>\n\t\t\t</button>\n\t\t</div>\n\t)\n\n}\n\nCharList.propTypes = {\n\tonCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport useMarvelService from '../../services/MarvelService';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nconst CharInfo =(props) => {\n\n\tconst [char, setChar] = useState(null);\n\n\tconst {loading, error, getCharacter, clearError} = useMarvelService();\n\n\tuseEffect(() => {\n\t\tupdateChar();\n\t}, [props.charId])\n\n\tconst updateChar = () => {\n\t\tconst {charId} = props;\n\t\tif (!charId) {\n\t\t\treturn;\n\t\t}\n\t\tclearError();\n\t\tgetCharacter(charId)\n\t\t\t.then(onCharLoaded)\n\t}\n\n\tconst onCharLoaded = (char) => {\n\t\tsetChar(() => char);\n\t}\n\n\tconst skeleton = char || loading || error ? null : <Skeleton/>;\n\tconst errorMessage = error ? <ErrorMessage/> : null;\n\tconst spinner = loading ? <Spinner/> : null;\n\tconst content = !(loading || error || !char) ? <View char = {char}/> : null;\n\n\treturn (\n\t\t<div className=\"char__info\">\n\t\t\t{skeleton}\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{content}\n\t\t</div>\n\t)\n}\n\nconst View = ({char}) => {\n\tconst {name, description, thumbnail, homepage, wiki, comics} = char;\n\tlet imgStyle = {\n\t\t'objectFit' : 'cover',\n\t\t'height': '100%'\n\t};\n\tif(thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n\t\timgStyle = {'objectFit' : 'unset', 'height': '100%'};\n\t} else if (thumbnail.indexOf('.gif') > -1) {\n\t\timgStyle = {'objectFit' : 'contain'};\n\t}\n\n\tlet comicsSliced =  comics.length > 10 ? comics.slice(0, 10) : comics;\n\t\n\treturn(\n\t\t<>\n\t\t\t<div className=\"char__basics\">\n\t\t\t\t<img src={thumbnail} \n\t\t\t\t\talt={name} \n\t\t\t\t\tstyle = {imgStyle}/>\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"char__info-name\">{name}</div>\n\t\t\t\t\t<div className=\"char__btns\">\n\t\t\t\t\t\t<a href={homepage} className=\"button button__main\">\n\t\t\t\t\t\t\t<div className=\"inner\">homepage</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a href={wiki} className=\"button button__secondary\">\n\t\t\t\t\t\t\t<div className=\"inner\">Wiki</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"char__descr\">{description}</div>\n\t\t\t<div className=\"char__comics\">Comics:</div>\n\t\t\t<ul className=\"char__comics-list\">\n\t\t\t\t{comicsSliced.length > 0 ? null : 'Comics info is not available for this character'}\n\t\t\t\t{ comicsSliced.map((item, i) => {\n\t\t\t\t\t// let comicsId = (item.resourceURI.split('/').pop());\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key = {i} className=\"char__comics-item\">\n\t\t\t\t\t\t\t{/* <Link to={`/comics/${comicsId}`}>\n\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t</Link> */}\n\t\t\t\t\t\t\t{item}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</>\n\t)\n}\n\nCharInfo.propTypes = {\n\tcharId: PropTypes.number\n}\n\nexport default CharInfo;","import { useState } from 'react';\nimport {Formik, Form, Field, ErrorMessage as FormikErrorMessage} from 'formik';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport './searchForm.scss';\n\n\nconst SearchForm = () => {\n\tconst [char, setChar] = useState(null);\n\tconst {loading, error, clearError, getCharacterByName} = useMarvelService();\n\n\tconst onCharLoaded = (char) => {\n\t\tsetChar(() => char);\n\t}\n\n\tconst updateChar = (name) => {\n\t\tclearError();\n\t\tgetCharacterByName(name)\n\t\t\t.then(onCharLoaded);\n\t}\n\n\tconst errorMessage = error ? <div className='form__error'>\n\t\t\t\t\t\t\t\t\t<ErrorMessage/>\n\t\t\t\t\t\t\t\t</div> : null;\n\tconst results = !char ? null : char.length > 0 ? \n\t\t<div className='form__wrapper'>\n\t\t\t<div className='form__success'>\n\t\t\t\tThere is! Visit {char[0].name} page?\n\t\t\t</div>\n\t\t\t<Link to={`/characters/${char[0].id}`}\n\t\t\t\tclassName=\"button button__secondary\">\n\t\t\t\t<div className=\"inner\">TO PAGE</div>\n\t\t\t</Link>\n\t\t</div> :\n\t\t<div className='form__error'>\n\t\t\tThe character was not found. Check the name and try again\n\t\t</div>\n\n\treturn (\n\t\t<Formik  \n\t\t\tinitialValues = {{\n\t\t\t\tcharName: ''\n\t\t\t}}\n\t\t\tvalidationSchema= {Yup.object({\n\t\t\t\tcharName: Yup.string().required('This field is required')\n\t\t\t})}\n\t\t\tonSubmit={({charName}) => {\n\t\t\t\tupdateChar(charName);\n\t\t\t}} >\n\t\t\t<Form \n\t\t\t\tclassName='form'>\n\t\t\t\t<label className='form__header'>\n\t\t\t\t\tOr find a character by name:\n\t\t\t\t</label>\n\t\t\t\t<div className='form__wrapper'>\n\t\t\t\t\t<Field\n\t\t\t\t\t\tclassName='form__search'\n\t\t\t\t\t\tplaceholder='Enter name'\n\t\t\t\t\t\tid=\"charName\"\n\t\t\t\t\t\tname=\"charName\"\n\t\t\t\t\t\ttype='search'\n\t\t\t\t\t/>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"button button__main\"\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\tdisabled = {loading}>\n\t\t\t\t\t\t<div className=\"inner\">FIND</div>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<FormikErrorMessage \n\t\t\t\t\tclassName='form__error'\n\t\t\t\t\tname='charName'\n\t\t\t\t\tcomponent='div'/>\n\t\t\t\t{errorMessage}\n\t\t\t\t{results}\n\t\t\t</Form>\n\t\t</Formik>\n\t)\n}\n\nexport default SearchForm;","import { Component } from \"react\";\nimport ErrorMessage from \"../errorMessage/errorMessage\";\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false\n    }\n\n\n    componentDidCatch(error, errorInfo) {\n        console.log(error, errorInfo);\n        this.setState({\n            error: true\n        })\n    }\n\n    render() {\n        if (this.state.error) {\n            return <ErrorMessage/>\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","import { useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport SearchForm from '../searchForm/SearchForm';\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nconst FirstPage = () => {\n\tconst [selectedChar, setChar] = useState(null);\n\n\tconst onCharSelected = (id) => {\n\t\tsetChar(id);\n\t}\n\treturn(\n\t\t<>\n\t\t\t<Helmet>\n\t\t\t\t<meta\n\t\t\t\t\tname=\"description\"\n\t\t\t\t\tcontent=\"Marvel information portal\"/>\n\t\t\t\t<title>Marvel information portal</title>\n\t\t\t</Helmet>\n\t\t\t<ErrorBoundary>\n\t\t\t\t<RandomChar/>\n\t\t\t</ErrorBoundary>\n\t\t\t<div className=\"char__content\">\n\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t<CharList onCharSelected={onCharSelected}/>\n\t\t\t\t</ErrorBoundary>\n\n\t\t\t\t<aside className=\"char__aside\">\n\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t<CharInfo charId={selectedChar}/>\n\t\t\t\t\t</ErrorBoundary>\n\n\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t<SearchForm/>\n\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t</aside>\n\n\t\t\t</div>\n\t\t\t<img className=\"bg-decoration\" \n\t\t\t\tsrc={decoration} \n\t\t\t\talt=\"vision\"/>\n\t\t</>\n\t)\n}\n\nexport default FirstPage;","import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n\t// const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\tconst request = useCallback(async (url, method = 'GET', body = null, headers = {} ) => {\t\n\t\tsetLoading(true);\n\n\t\ttry {\n\t\t\tconst response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            setLoading(false);\n            return data;\n        } catch(e) {\n            setLoading(false);\n            setError(e.message);\n            throw e;\n        }\n\t}, []);\n\n    const clearError = useCallback(() => setError(null), []);\n    return {loading, request, error, clearError}\n}","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n\tconst {loading, request, error, clearError} = useHttp();\n\n\t// const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n\t// const _apikey = 'apikey=10877f709e567804be49abd6a4c6cbcd';\n\t// const _baseOffset = 210;\n\n\tconst _apiBase = 'https://marvel-server-zeta.vercel.app/';\n\tconst _apikey = 'apikey=d4eecb0c66dedbfae4eab45d312fc1df';\n\tconst _baseOffset = 0;\n\n\tconst getAllComics = async(offset = _baseOffset) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apikey}`\n\t\t);\n\t\treturn res.data.results.map(_transformComics);\n\t}\n\n\tconst getAllCharacters = async(offset = _baseOffset) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}characters?limit=9&offset=${offset}&${_apikey}`\n\t\t);\n\t\treturn res.data.results.map(_transformCharacter);\n\t}\n\n\tconst getCharacterByName = async(name) => {\n\t\tconst res = await request (\n\t\t\t`${_apiBase}characters?name=${name}&${_apikey}`\n\t\t);\n\t\treturn res.data.results.map(_transformCharacter);\n\t}\n\n\tconst getCharacter = async (id) => {\n\t\tconst res =  await request(\n\t\t\t`${_apiBase}characters/${id}?${_apikey}`\n\t\t);\n\t\treturn _transformCharacter(res.data.results[0]);\n\t}\n\n\tconst getComic = async (id) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}comics/${id}?${_apikey}`\n\t\t)\n\t\treturn _transformComics(res.data.results[0]);\n\t}\n\n\tconst _transformCharacter = (char) => {\n\t\t// let str = char.description;\n\t\t// if (str.length > 100) {\n\t\t// \tstr = str.slice(0, 220)+\"...\";\n\t\t// }\n\t\t// if (str.length === 0) {\n\t\t// \tstr = 'Description is not available for this character'\n\t\t// }\n\t\treturn {\n\t\t\tid: char.id,\n\t\t\tname: char.name,\n\t\t\tdescription: char.description ? char.description.length > 200 ? char.description.slice (0, 200) +\"...\" :  char.description:  'Description is not available for this character',\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n\t\t\thomepage: char.urls[0].url,\n\t\t\twiki: char.urls[1].url,\n\t\t\tcomics: char.comics.items\n\t\t}\n\t}\n\n\tconst _transformComics = (comics) => {\n\t\treturn {\n\t\t\tid: comics.id,\n\t\t\ttitle: comics.title,\n\t\t\tdescription: comics.description || \"There is no description\",\n\t\t\tpageCount: comics.pageCount\n\t\t\t\t? `${comics.pageCount} p.`\n\t\t\t\t: \"No information about the number of pages\",\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\n\t\t\t// optional chaining operator\n\t\t\tprice: comics.prices[0].price\n\t\t\t\t? `${comics.prices[0].price}$`\n\t\t\t\t: \"not available\",\n\t\t};\n\t};\n\treturn {\n\t\tloading, \n\t\terror, \n\t\tclearError,\n\t\tgetAllCharacters, \n\t\tgetCharacter, \n\t\tgetCharacterByName, \n\t\tgetAllComics,\n\t\tgetComic\n\t}\n}\n\n// all\n// https://gateway.marvel.com:443/v1/public/characters?apikey=10877f709e567804be49abd6a4c6cbcd\n\n//limit 9 offset 210\n// https://gateway.marvel.com:443/v1/public/characters?limit=9&offset=210&apikey=10877f709e567804be49abd6a4c6cbcd\n\n\nexport default useMarvelService;"],"names":["ErrorMessage","_jsx","src","img","alt","style","display","width","heigth","objectFit","margin","View","_ref","char","name","description","thumbnail","homepage","wiki","_jsxs","className","children","href","RandomChar","setChar","useState","loading","error","getCharacter","clearError","useMarvelService","useEffect","updateChar","onCharLoaded","id","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","props","charList","setCharList","newItemsLoading","setNewItemsLoading","offset","setOffset","charEnded","setCharEnded","pageEnded","setPageEnded","getAllCharacters","pageScrollToTop","onRequest","setTimeout","window","addEventListener","onScroll","scroll","top","left","initial","onCharListLoaded","height","document","documentElement","scrollHeight","clientHeight","scrollY","removeEventListener","async","ended","newCharList","length","delay","ms","Promise","resolve","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","items","arr","map","i","imgStyle","indexOf","CSSTransition","classNames","timeout","ref","el","tabIndex","onCharSelected","onKeyDown","e","key","preventDefault","TransitionGroup","component","renderItems","disabled","Skeleton","_Fragment","comics","comicsSliced","slice","charId","skeleton","SearchForm","getCharacterByName","results","Link","to","Formik","initialValues","charName","validationSchema","Yup","required","onSubmit","Form","Field","placeholder","type","FormikErrorMessage","ErrorBoundary","Component","constructor","arguments","state","componentDidCatch","errorInfo","console","log","this","setState","render","FirstPage","selectedChar","Helmet","CharList","CharInfo","decoration","request","useHttp","setLoading","setError","useCallback","url","method","undefined","body","headers","response","fetch","ok","Error","status","data","json","message","_apiBase","_apikey","_transformCharacter","path","extension","urls","_transformComics","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","res","getAllComics","getComic"],"sourceRoot":""}