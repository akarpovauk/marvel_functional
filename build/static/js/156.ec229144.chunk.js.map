{"version":3,"file":"static/js/156.ec229144.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/errorMessage.js","components/pages/SinglePage.js","hooks/http.hook.js","services/MarvelService.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import img from './error.gif';\nconst ErrorMessage = () => {\n\treturn (\n\t\t<img \n\t\t\tsrc={img} \n\t\t\talt=\"error message\"\n\t\t\tstyle = {{display: \"block\", \n\t\t\t\t\twidth: \"250px\", \n\t\t\t\t\theigth: \"250px\", \n\t\t\t\t\tobjectFit: 'contain',\n\t\t\t\t\tmargin: '0 auto'\n\t\t\t\t}}\n\t\t/>\n\t)\n}\nexport default ErrorMessage;","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\nimport useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/spinner\";\nimport ErrorMessage from \"../errorMessage/errorMessage\";\nimport AppBanner from '../appBanner/AppBanner';\n\nconst SinglePage = ({Component, dataType}) => {\n\tconst {id} = useParams();\n\tconst [data, setData] = useState(null);\n\tconst {loading, error, getComic, getCharacter, clearError} = useMarvelService();\n\n\tuseEffect(() => {\n\t\tupdateData()\n\t}, [id])\n\n\tconst updateData = () => {\n\t\tclearError();\n\n\t\tswitch (dataType) {\n\t\t\tcase 'comic':\n\t\t\t\tgetComic(id).then(onDataLoaded);\n\t\t\t\tbreak;\n\t\t\tcase 'character':\n\t\t\t\tgetCharacter(id).then(onDataLoaded);\n\t\t}\n\t}\n\n\tconst onDataLoaded = (data) => {\n\t\tsetData(() => data)\n\t}\n\n\tconst errorMessage = error ? <ErrorMessage/> : null;\n\tconst spinner = loading ? <Spinner/> : null;\n\tconst content = !(loading || error || !data) ? <Component data = {data}/> : null;\n\n    return (\n\t\t<>\n\t\t\t<AppBanner/>\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{content}\n\t\t</>\n    )\n}\n\nexport default SinglePage;","import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n\t// const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\tconst request = useCallback(async (url, method = 'GET', body = null, headers = {} ) => {\t\n\t\tsetLoading(true);\n\n\t\ttry {\n\t\t\tconst response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            setLoading(false);\n            return data;\n        } catch(e) {\n            setLoading(false);\n            setError(e.message);\n            throw e;\n        }\n\t}, []);\n\n    const clearError = useCallback(() => setError(null), []);\n    return {loading, request, error, clearError}\n}","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n\tconst {loading, request, error, clearError} = useHttp();\n\n\t// const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n\t// const _apikey = 'apikey=10877f709e567804be49abd6a4c6cbcd';\n\t// const _baseOffset = 210;\n\n\tconst _apiBase = 'https://marvel-server-zeta.vercel.app/';\n\tconst _apikey = 'apikey=d4eecb0c66dedbfae4eab45d312fc1df';\n\tconst _baseOffset = 0;\n\n\tconst getAllComics = async(offset = _baseOffset) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apikey}`\n\t\t);\n\t\treturn res.data.results.map(_transformComics);\n\t}\n\n\tconst getAllCharacters = async(offset = _baseOffset) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}characters?limit=9&offset=${offset}&${_apikey}`\n\t\t);\n\t\treturn res.data.results.map(_transformCharacter);\n\t}\n\n\tconst getCharacterByName = async(name) => {\n\t\tconst res = await request (\n\t\t\t`${_apiBase}characters?name=${name}&${_apikey}`\n\t\t);\n\t\treturn res.data.results.map(_transformCharacter);\n\t}\n\n\tconst getCharacter = async (id) => {\n\t\tconst res =  await request(\n\t\t\t`${_apiBase}characters/${id}?${_apikey}`\n\t\t);\n\t\treturn _transformCharacter(res.data.results[0]);\n\t}\n\n\tconst getComic = async (id) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}comics/${id}?${_apikey}`\n\t\t)\n\t\treturn _transformComics(res.data.results[0]);\n\t}\n\n\tconst _transformCharacter = (char) => {\n\t\t// let str = char.description;\n\t\t// if (str.length > 100) {\n\t\t// \tstr = str.slice(0, 220)+\"...\";\n\t\t// }\n\t\t// if (str.length === 0) {\n\t\t// \tstr = 'Description is not available for this character'\n\t\t// }\n\t\treturn {\n\t\t\tid: char.id,\n\t\t\tname: char.name,\n\t\t\tdescription: char.description ? char.description.length > 200 ? char.description.slice (0, 200) +\"...\" :  char.description:  'Description is not available for this character',\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n\t\t\thomepage: char.urls[0].url,\n\t\t\twiki: char.urls[1].url,\n\t\t\tcomics: char.comics.items\n\t\t}\n\t}\n\n\tconst _transformComics = (comics) => {\n\t\treturn {\n\t\t\tid: comics.id,\n\t\t\ttitle: comics.title,\n\t\t\tdescription: comics.description || \"There is no description\",\n\t\t\tpageCount: comics.pageCount\n\t\t\t\t? `${comics.pageCount} p.`\n\t\t\t\t: \"No information about the number of pages\",\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\n\t\t\t// optional chaining operator\n\t\t\tprice: comics.prices[0].price\n\t\t\t\t? `${comics.prices[0].price}$`\n\t\t\t\t: \"not available\",\n\t\t};\n\t};\n\treturn {\n\t\tloading, \n\t\terror, \n\t\tclearError,\n\t\tgetAllCharacters, \n\t\tgetCharacter, \n\t\tgetCharacterByName, \n\t\tgetAllComics,\n\t\tgetComic\n\t}\n}\n\n// all\n// https://gateway.marvel.com:443/v1/public/characters?apikey=10877f709e567804be49abd6a4c6cbcd\n\n//limit 9 offset 210\n// https://gateway.marvel.com:443/v1/public/characters?limit=9&offset=210&apikey=10877f709e567804be49abd6a4c6cbcd\n\n\nexport default useMarvelService;"],"names":["AppBanner","_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","ErrorMessage","img","style","display","width","heigth","objectFit","margin","_ref","Component","dataType","id","useParams","data","setData","useState","loading","error","getComic","getCharacter","clearError","useMarvelService","useEffect","updateData","then","onDataLoaded","errorMessage","spinner","Spinner","content","_Fragment","request","useHttp","setLoading","setError","useCallback","async","url","method","arguments","length","undefined","body","headers","response","fetch","ok","Error","status","json","e","message","_apiBase","_apikey","_transformCharacter","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_transformComics","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","getAllCharacters","offset","results","map","res","getCharacterByName","getAllComics"],"sourceRoot":""}