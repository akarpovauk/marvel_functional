{"version":3,"file":"static/js/682.989b7d9e.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/errorMessage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","hooks/http.hook.js","services/MarvelService.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import img from './error.gif';\nconst ErrorMessage = () => {\n\treturn (\n\t\t<img \n\t\t\tsrc={img} \n\t\t\talt=\"error message\"\n\t\t\tstyle = {{display: \"block\", \n\t\t\t\t\twidth: \"250px\", \n\t\t\t\t\theigth: \"250px\", \n\t\t\t\t\tobjectFit: 'contain',\n\t\t\t\t\tmargin: '0 auto'\n\t\t\t\t}}\n\t\t/>\n\t)\n}\nexport default ErrorMessage;","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport Spinner from '../spinner/spinner';\n\nimport './comicsList.scss';\n\nconst ComicsList = (props) => {\n\tconst [comicsList, setComicsList] = useState([]);\n\tconst [newItemsLoading, setNewItemsLoading] = useState(false);\n\tconst [offset, setOffset] = useState(0);\n\tconst [comicsEnded, setComicsEnded] = useState(false);\n\tconst [pageEnded, setPageEnded] = useState(false);\n\n\tconst {loading, error, getAllComics} = useMarvelService();\n\t\n\n\tuseEffect(() => {\n\t\tpageScrollToTop();\n\t\tonRequest(offset, true);\n\t\tsetTimeout(() => {\n\t\t\twindow.addEventListener('scroll', onScroll);\n\t\t}, 150);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (pageEnded) {\n\t\t\tonRequest(offset);\n\t\t}\n\t}, [pageEnded]);\n\n\tconst pageScrollToTop =() => {\n\t\tsetTimeout(() => { \n\t\t\twindow.scroll({ top: -1, left: 0 });\n\t\t}, 100);\n\t}\n\n\tconst onScroll = () => {\n\t\tconst height = document.documentElement.scrollHeight;\n\t\tconst clientHeight = document.documentElement.clientHeight;\n\t\tconst scroll =  window.scrollY;\n\t\tif (comicsEnded) {\n\t\t\twindow.removeEventListener('scroll', onScroll);\n\t\t}\n\t\tif (scroll + clientHeight >= height - 5) {\n\t\t\tsetPageEnded(true);\n\t\t}\n\t}\n\n\tconst onComicsListLoaded = (newComicsList) => {\n\t\tlet ended = false;\n\t\tif(newComicsList.length < 8) {\n\t\t\tended = true;\n\t\t}\n\n\t\tsetComicsList(comicsList => [...comicsList, ...newComicsList ]);\n\t\tsetNewItemsLoading(false);\n\t\tsetOffset(offset => offset + 8);\n\t\tsetComicsEnded(ended);\n\t\tsetPageEnded(false);\n\t}\n\n\tconst onRequest = (offset, initial) => {\n\t\tinitial ? setNewItemsLoading(false) : setNewItemsLoading(true);\n\t\tgetAllComics(offset)\n\t\t\t.then(onComicsListLoaded)\n\t}\n\n\tfunction renderItems(arr) {\n\t\tconst items = arr.map((item, i) => {\n\t\t\treturn (\n\t\t\t\t<CSSTransition key = {i} timeout={500} classNames='comics__item'>\n\t\t\t\t\t<li \n\t\t\t\t\t\tclassName='comics__item'\n\t\t\t\t\t\ttabIndex='0'>\n\t\t\t\t\t\t<Link to={`/comics/${item.id}`}>\n\t\t\t\t\t\t\t<img src={item.thumbnail} \n\t\t\t\t\t\t\t\talt={item.title}\n\t\t\t\t\t\t\t\tclassName=\"comics__item-img\"/>\n\t\t\t\t\t\t\t<div className=\"comics__item-name\">{item.title}</div>\n\t\t\t\t\t\t\t<div className=\"comics__item-price\">{item.price}</div>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t</CSSTransition>\n\t\t\t)\n\t\t});\n\n\t\treturn (\n\t\t\t<ul className=\"comics__grid\">\n\t\t\t\t<TransitionGroup component = {null}>\n\t\t\t\t\t{items}\n\t\t\t\t</TransitionGroup>\n\t\t\t</ul>\n\t\t)\n\t}\n\n\tconst items = renderItems(comicsList);\n\tconst errorMessage = error ? <ErrorMessage/> : null;\n\tconst spinner = loading && !newItemsLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{items}\n            <button className=\"button button__main button__long\"\n\t\t\t\t\tdisabled={newItemsLoading}\n\t\t\t\t\tstyle={{'display': comicsEnded? \"none\" : \"block\"}}\n\t\t\t\t\tonClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\nimport AppBanner from \"../appBanner/AppBanner\";\nimport ComicsList from \"../comicsList/ComicsList\";\n\nconst ComicsPage = () => {\n\treturn (\n\t\t<>\n\t\t\t<Helmet>\n\t\t\t\t<meta\n\t\t\t\t\tname=\"description\"\n\t\t\t\t\tcontent=\"Marvel comics list\"/>\n\t\t\t\t<title>Comics list</title>\n\t\t\t</Helmet>\n\t\t\t<AppBanner/>\n\t\t\t<ComicsList/>\n\t\t</>\n\t)\n}\nexport default ComicsPage;","import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n\t// const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\tconst request = useCallback(async (url, method = 'GET', body = null, headers = {} ) => {\t\n\t\tsetLoading(true);\n\n\t\ttry {\n\t\t\tconst response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            setLoading(false);\n            return data;\n        } catch(e) {\n            setLoading(false);\n            setError(e.message);\n            throw e;\n        }\n\t}, []);\n\n    const clearError = useCallback(() => setError(null), []);\n    return {loading, request, error, clearError}\n}","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n\tconst {loading, request, error, clearError} = useHttp();\n\n\t// const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n\t// const _apikey = 'apikey=10877f709e567804be49abd6a4c6cbcd';\n\t// const _baseOffset = 210;\n\n\tconst _apiBase = 'https://marvel-server-zeta.vercel.app/';\n\tconst _apikey = 'apikey=d4eecb0c66dedbfae4eab45d312fc1df';\n\tconst _baseOffset = 0;\n\n\tconst getAllComics = async(offset = _baseOffset) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apikey}`\n\t\t);\n\t\treturn res.data.results.map(_transformComics);\n\t}\n\n\tconst getAllCharacters = async(offset = _baseOffset) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}characters?limit=9&offset=${offset}&${_apikey}`\n\t\t);\n\t\treturn res.data.results.map(_transformCharacter);\n\t}\n\n\tconst getCharacterByName = async(name) => {\n\t\tconst res = await request (\n\t\t\t`${_apiBase}characters?name=${name}&${_apikey}`\n\t\t);\n\t\treturn res.data.results.map(_transformCharacter);\n\t}\n\n\tconst getCharacter = async (id) => {\n\t\tconst res =  await request(\n\t\t\t`${_apiBase}characters/${id}?${_apikey}`\n\t\t);\n\t\treturn _transformCharacter(res.data.results[0]);\n\t}\n\n\tconst getComic = async (id) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}comics/${id}?${_apikey}`\n\t\t)\n\t\treturn _transformComics(res.data.results[0]);\n\t}\n\n\tconst _transformCharacter = (char) => {\n\t\t// let str = char.description;\n\t\t// if (str.length > 100) {\n\t\t// \tstr = str.slice(0, 220)+\"...\";\n\t\t// }\n\t\t// if (str.length === 0) {\n\t\t// \tstr = 'Description is not available for this character'\n\t\t// }\n\t\treturn {\n\t\t\tid: char.id,\n\t\t\tname: char.name,\n\t\t\tdescription: char.description ? char.description.length > 200 ? char.description.slice (0, 200) +\"...\" :  char.description:  'Description is not available for this character',\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n\t\t\thomepage: char.urls[0].url,\n\t\t\twiki: char.urls[1].url,\n\t\t\tcomics: char.comics.items\n\t\t}\n\t}\n\n\tconst _transformComics = (comics) => {\n\t\treturn {\n\t\t\tid: comics.id,\n\t\t\ttitle: comics.title,\n\t\t\tdescription: comics.description || \"There is no description\",\n\t\t\tpageCount: comics.pageCount\n\t\t\t\t? `${comics.pageCount} p.`\n\t\t\t\t: \"No information about the number of pages\",\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\n\t\t\t// optional chaining operator\n\t\t\tprice: comics.prices[0].price\n\t\t\t\t? `${comics.prices[0].price}$`\n\t\t\t\t: \"not available\",\n\t\t};\n\t};\n\treturn {\n\t\tloading, \n\t\terror, \n\t\tclearError,\n\t\tgetAllCharacters, \n\t\tgetCharacter, \n\t\tgetCharacterByName, \n\t\tgetAllComics,\n\t\tgetComic\n\t}\n}\n\n// all\n// https://gateway.marvel.com:443/v1/public/characters?apikey=10877f709e567804be49abd6a4c6cbcd\n\n//limit 9 offset 210\n// https://gateway.marvel.com:443/v1/public/characters?limit=9&offset=210&apikey=10877f709e567804be49abd6a4c6cbcd\n\n\nexport default useMarvelService;"],"names":["AppBanner","_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","ErrorMessage","img","style","display","width","heigth","objectFit","margin","props","comicsList","setComicsList","useState","newItemsLoading","setNewItemsLoading","offset","setOffset","comicsEnded","setComicsEnded","pageEnded","setPageEnded","loading","error","getAllComics","useMarvelService","useEffect","pageScrollToTop","onRequest","setTimeout","window","addEventListener","onScroll","scroll","top","left","height","document","documentElement","scrollHeight","clientHeight","scrollY","removeEventListener","onComicsListLoaded","newComicsList","ended","length","initial","then","items","arr","map","item","i","CSSTransition","timeout","classNames","tabIndex","Link","to","id","thumbnail","title","price","TransitionGroup","component","renderItems","errorMessage","spinner","Spinner","disabled","onClick","ComicsPage","_Fragment","Helmet","name","content","ComicsList","request","clearError","useHttp","setLoading","setError","useCallback","async","url","method","arguments","undefined","body","headers","response","fetch","ok","Error","status","data","json","e","message","_apiBase","_apikey","_transformCharacter","char","description","slice","path","extension","homepage","urls","wiki","comics","_transformComics","_comics$textObjects$","pageCount","language","textObjects","prices","getAllCharacters","results","getCharacter","res","getCharacterByName","getComic"],"sourceRoot":""}